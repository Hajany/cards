<%--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
--%>
<html>
<head>
<title>Questionnaire cleanup</title>
</head>
<body>
<%

response.setContentType('text/html');

/** This will hold the forms that have been checked out while fixing problems, and which need to be checked in at the end. */
let formsToCheckin = new java.util.HashSet();

/** Remember the version manager for lower overhead. */
let versionManager = currentSession.getWorkspace().getVersionManager();

/** Without confirm=1 in the URL, we don't do any actual changes. */
let dryRun = request.getParameter("confirm") != "1";

/**
 * Find all answers for the "Enrollment status" question with "on_hold" as the value,
 * and update them to have "paused" as the value. All affected forms are checked out.
 */
let fixAllAnswers = function() {
  let answers = currentNode.getSession().getWorkspace().getQueryManager().createQuery("select n.* from [cards:Answer] as n where n.question='" + getEnrollmentStatusQuestionUUID() + "' and n.value='on_hold'", "JCR-SQL2").execute().getNodes();
  while (answers.hasNext()) {
    let answer = answers.next();
    updateAnswer(answer);
  }
}

/**
 * Update the value of an answer to be "paused".
 * The node must be an answer node (cards:Answer).
 * The form that the answer is a part of is checked out, if not already checked out.
 *
 * @param answer an answer node
 */
let updateAnswer = function(answer) {
  let form = findForm(answer);
  out.println("<li>Fixing answer in <tt>" + getFormName(form) + "</tt></li>");
  !dryRun && answer.setProperty("value", "paused");
}

/**
 * Find the form that the current node is in, checkout, and return.
 * 
 * @param node a node, must be descendant of a Form node
 * @return a Form node
 */
let findForm = function(node) {
    let result = node;
    while(result != null && !result.isNodeType('cards:Form')) {
        result = result.getParent();
    }
    if (!dryRun && !versionManager.isCheckedOut(result.getPath())) {
        versionManager.checkout(result.getPath());
        formsToCheckin.add(result.getPath());
    }
    return result;
}

/**
 * Compute the name of a form, in the format "Subject label / Questionnaire title".
 *
 * @param form a Form node
 * @return the form name as a string
 */
let getFormName = function(form) {
    return result = form.getProperty("subject").getNode().getProperty("identifier") + " / " + form.getProperty("questionnaire").getNode().getProperty("title");
}

/**
 * Find and return the UUID of the "Enrollment status" question, which must be a child of the current questionnaire.
 *
 * @return UUID as a string
 */
let getEnrollmentStatusQuestionUUID = function() {
  return currentNode.getNode("Status/enrollment_status").getIdentifier();
}

// All definitions done, perform the actual work

out.println("<h1>Checking questionnaire " + currentNode.getProperty("title") + "</h1>");

dryRun && out.println("<h2>Dry run, here is what will be done:</h2>");

out.println("<ul>");
fixAllAnswers()
out.println("</ul>");
if (request.getParameter("confirm") == "1") {
    currentSession.save();
    out.println("<p>Changes performed.<p>")
    if (!formsToCheckin.isEmpty()) {
      out.println("<p>Checking in forms:</p><ul>")
      let it = formsToCheckin.iterator();
      while (it.hasNext()) {
        let form = it.next();
        out.println("<li>Checkin <tt>" + form + "</tt></li>");
        versionManager.checkin(form);
      }
      out.println("</ul>")
    }
} else {
  out.println("<p><a href='" + request.getPathInfo() + "?confirm=1&" + request.getQueryString() + "'>Confirm?</a></p>");
}

%>
</body>
</html>
